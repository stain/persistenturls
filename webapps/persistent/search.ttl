@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix obj:<http://www.openrdf.org/rdf/2009/object#>.
@prefix http:<http://www.openrdf.org/rdf/2009/httpobject#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix purl:<http://persistent.name/rdf/2010/purl#>.

<search-xsl> rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom <java:java.io.InputStream>];
	http:type "application/xml";
	http:transform <template-xsl>;
	obj:xslt <search.xsl>.

<search-xsl-input> a owl:ObjectProperty; a owl:FunctionalProperty;
	rdfs:domain <search-xsl>;
	rdfs:range <java:java.io.InputStream>.

<template-xsl> rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse; owl:allValuesFrom <java:java.io.InputStream>];
	http:type "text/html";
	obj:xslt <template.xsl>.

<template-xsl-input> a owl:ObjectProperty; a owl:FunctionalProperty;
	rdfs:domain <template-xsl>;
	rdfs:range <java:java.io.InputStream>.

# Abstract label prefix search method
purl:search rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target;
		owl:allValuesFrom purl:Server];
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom obj:TupleResult].

purl:search-soundex a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain purl:search;
	rdfs:range xsd:string;
	http:parameter "q";
	http:transform calli:asSoundex;
	obj:name "soundex".

purl:search-regex a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain purl:search;
	rdfs:range xsd:string;
	http:parameter "q";
	http:transform calli:regexStartsWith;
	obj:name "regex".

<user-search-xsl> rdfs:subClassOf <search-xsl>;
	http:type "application/xml";
	http:transform <template-xsl>;
	obj:xslt <user/search.xsl>.

# Lists all users by label prefix
# Called from user search form
purl:user-search rdfs:subClassOf purl:search;
	http:operation "user";
	http:type "application/sparql-results+xml";
	http:cache-control "must-reevaluate";
	http:transform <user-search-xsl>;
	obj:sparql """
		SELECT DISTINCT ?uri ?label
		WHERE {
			?uri a purl:User; rdfs:label ?label; calli:soundex $soundex
			FILTER (regex(?label, $regex, "i"))
		}
		ORDER BY ?label ?uri
	""".

<domain-search-xsl> rdfs:subClassOf <search-xsl>;
	http:type "application/xml";
	http:transform <template-xsl>;
	obj:xslt <domain/search.xsl>.

# Lists all domains by label prefix
# Called from domain search form
purl:domain-search rdfs:subClassOf purl:search;
	http:operation "domain";
	http:type "application/sparql-results+xml";
	http:cache-control "must-reevaluate";
	http:transform <domain-search-xsl>;
	obj:sparql """
		SELECT DISTINCT ?uri ?label ?parent
		WHERE {
			?uri a purl:Domain; rdfs:label ?label; purl:partOf ?parent; calli:soundex $soundex
			FILTER (regex(?label, $regex, "i"))
		}
		ORDER BY ?label ?uri
	""".

<purl-search-xsl> rdfs:subClassOf <search-xsl>;
	http:type "application/xml";
	http:transform <template-xsl>;
	obj:xslt <purl/search.xsl>.

# Lists all PURLs by label prefix
# Called from PURL form
purl:purl-search rdfs:subClassOf purl:search;
	http:operation "purl";
	http:type "application/sparql-results+xml";
	http:cache-control "must-reevaluate";
	http:transform <purl-search-xsl>;
	obj:sparql """
		SELECT DISTINCT ?uri ?label ?type ?parent ?redirection ?unresolvable
		WHERE {
			?uri a ?type; rdfs:label ?label; purl:partOf ?parent; calli:soundex $soundex
			FILTER (?type = purl:PURL || ?type = purl:Partial || ?type = purl:Domain)
			OPTIONAL { ?uri ?redirection [a purl:Redirection] }
			OPTIONAL { ?uri ?unresolvable [a purl:Unresolvable] }
			FILTER (regex(?label, $regex, "i"))
		}
		ORDER BY ?label ?uri
	""".

# Finds PURLs with a particular target
# Called from PURL form if q contains ":"
purl:target-search rdfs:subClassOf purl:search;
	http:operation "target";
	http:type "application/sparql-results+xml";
	http:cache-control "must-reevaluate";
	http:transform <purl-search-xsl>;
	obj:sparql """
		SELECT DISTINCT ?uri ?label ?type ?parent ?redirection ?unresolvable
		WHERE {
			?uri a ?type; ?rel $target; purl:partOf ?parent
			FILTER (?type = purl:PURL || ?type = purl:Partial || ?type = purl:Domain)
			OPTIONAL { ?uri ?redirection [a purl:Redirection] }
			OPTIONAL { ?uri ?unresolvable [a purl:Unresolvable] }
			OPTIONAL { ?uri rdfs:label ?label }
		}
		ORDER BY ?label ?uri
	""".

purl:target-search-arg a owl:ObjectProperty, owl:FunctionalProperty;
	rdfs:domain purl:target-search;
	rdfs:range rdfs:Resource;
	http:type "text/uri-list";
	http:parameter "q";
	obj:name "target".

