<?xml version="1.0" encoding="UTF-8"?>
<document>
<title>httpGet</title>
<!--***************Cascading Style Sheets***************-->
<csslist>
	<css>/xlib/styles/css_ten60_lnf.css</css>
	<css>/xlib/styles/xmlverbatim.css</css>
</csslist>
<!--***************Table of Contents***************-->
<toc>
	<section name="definition"/>
	<section name="purpose"/>
</toc>

<section name="title" styleuri="/xusr/share/doc/styles_1060/style_title.xsl">
	<content>
			<name>httpPost</name>
			<text>HTTP POST client requests</text>
	</content>
	<includes>
	</includes>
</section>

<section name="definition" styleuri="/xusr/share/doc/styles_1060/style_definition.xsl">
	<content>
		<module>urn:org:ten60:netkernel:ext:http:client</module>
		<format>
			<sub name="format"/>
		</format>
		<syntax>
			<type><b>httpPost</b></type>
			<url req="true">the URL to issue the request to</url>
			<config>an optional config resource</config>
			<state>an optional state resource</state>
			<arg>An argument to be POSTed in the request body</arg>
			<nvp>An NVP argument to be sent as URL-encoded form parameters</nvp>
			<target req="false">this:response</target>
		</syntax>
		<nkf>
			<sub name="nkf"/>
		</nkf>
	</content>
	<includes>
<include name="format" type="xml">
<instr>
	<type>httpPost</type>
	<url>http://www.1060research.com</url>
	<state>var:mystate</state>
	<arg>myMessage.xml</arg>
	<target>this:response</target>
</instr>
</include>
<include name="nkf" type="java"><java>
	import org.ten60.netkernel.xml.representation.DOMAspect;
	
	req = context.createSubRequest("active:httpPost");
	req.addArgument("url","http://1060.org/example-service");
	doc-to-post = new DOMAspect( d );
	req.addArgument("arg",doc-to-post);
	representation=context.issueSubRequest(req);
</java></include>
	</includes>
</section>

<section name="purpose" styleuri="/xusr/share/doc/styles_1060/style_basic.xsl">
	<content>
		<p>Issues an HTTP <b>POST</b> request for the given url.</p>
      <p>
        The optional <b>state</b> argument is used to store client-side state information.</p>
		<p>
		If an <b>nvp</b> argument is provided it will be treated as a Name-Value-Pair argument and sent as URL-encoded form parameters.
		</p>
		<p>
		If an <b>arg</b> argument is provided it will be added to the request body and sent as the POST resource to the url.
		</p>
		<p>
		<i>Please note httpPost does not support multipart in the body at this time. Therefore <b>nvp</b> and <b>arg</b> are mutually exclusive - you can only use one
		or the other not both together.</i>
		</p>
		<p>If you are issuing SOAP requests, the NetKernel <link name="doc_books_cst_soap_introduction">SOAP accessors</link> might be a better choice of technology.
		</p>
    	<h3>Client-Side State</h3>
  		<p>
  		  Interactions with the remote server are stateless unless a resource is provided as the optional
  		  <code>state</code> argument.
  		  Please refer to the <link name="doc_ura_httpState">httpState</link>
    		guide for details.
  	  </p>
		<h3>Header field interpretation</h3>
		<p>See <link name="doc_ura_httpGet">httpGet</link> for more details.</p>
	  	<h3>Config</h3>
  		<p>
  		  Configuration information is provided as the <code>config</code> argument.
  		  If this is missing the service will request configuration information from
  		  the address <code>ffcpl:/etc/HTTPClientConfig.xml</code>.
  		  If this is missing the following default is used:
  	  </p>
  		<sub name="config"/>
  		<p>
  		Each configuration element is optional, if not specified the default values (above) will be used.
  		The parameters are as follows:
  		</p>
  		<table>
  		  <tr>
  		    <td><b>proxyHost</b></td>
  		    <td>hostname of proxy server</td>
  	    </tr>
  		  <tr>
  		    <td><b>proxyPort</b></td>
  		    <td>port of proxy server</td>
  	    </tr>
  		  <tr>
  		    <td><b>followRedirects</b></td>
  		    <td>follow HTTP redirect response codes</td>
  	    </tr>
  		  <tr>
  		    <td><b>retryAttempts</b></td>
  		    <td>number of attempts to make connection before failing</td>
  	    </tr>
  		  <tr>
  		    <td><b>maxConnectionsPerHost</b></td>
  		    <td> maximum simultaneous connections to make to a single host</td>
  	    </tr>
  		  <tr>
  		    <td><b>maxTotalConneciton</b></td>
  		    <td>max total connections</td>
  	    </tr>
  		  <tr>
  		    <td><b>maxAcceptableConentLength</b></td>
  		    <td>largest resource to handle in response, -1 indicates accept any size.</td>
  	    </tr>
  		  <tr>
  		    <td><b>stateExpirationTime</b></td>
  		    <td>time for client side state to be valid.</td>
  	    </tr>
  		  <tr>
  		    <td><b>connectTimeout</b></td>
  		    <td>time to allow for a connection to be established with server before failing</td>
  	    </tr>
  		  <tr>
  		    <td><b>timeout</b></td>
  		    <td>time to allow an established connection to remain idle before failing</td>
  	    </tr>
  	  </table>
  		<p>
  		Proxy settings will be taken from the global system proxy settings if they are not specified in the config.
  		</p>
		<h3>HTTPResponseCodeAspect</h3>
		<p>
			If an error occurs issuing the request or you request to return an <link name="doc_aspect_HTTPResponseCodeAspect">HTTPResponseCodeAspect</link> aspect (see NKFRequest.setAspectClass())
			then the accessor will return a HTTPResponseCodeAspect containing the HTTP code and body response - this can be valuable for testing purposes.
		</p>
		<h3>Examples</h3>
		<h4>Posting a URI referenced XML document to a URL</h4>
		<sub name="egxml"/>
		<h4>Posting a literal XML document to a URL</h4>
		<sub name="egxmlliteral"/>
		<h4>Literal NVP Arguments Posted as URL-form encoded.</h4>
		<sub name="egnvp"/>
    </content>
	<includes>
<include name="config" type="xml">
<config>
	<proxyHost>proxy.mydomain.com</proxyHost>
	<proxyPort>80</proxyPort>
	<followRedirects>true</followRedirects>
	<retryAttempts>3</retryAttempts>
	<maxConnectionsPerHost>4</maxConnectionsPerHost>
	<maxTotalConnections>10</maxTotalConnections>
	<maxAcceptableContentLength>-1</maxAcceptableContentLength>
	<stateExpirationTime>600</stateExpirationTime>
	<connectTimeout>2000</connectTimeout>
	<timeout>5000</timeout>
</config>
</include>
	<include name="egnvp" type="xml">
<instr>
<type>httpPost</type>
<url>http://localhost:8081/test-http-client/server/echo.idoc</url>
<nvp>
<nvp>
<hello>world</hello>
<something>else</something>
</nvp>
</nvp>
<target>this:response</target>
</instr>
	</include>
	<include name="egxml" type="xml">
<instr>
<type>httpPost</type>
<url>http://localhost:8081/test-http-client/server/echo.idoc</url>
<arg>ffpl:/some/path/myXMLMessage.xml</arg>
<target>this:response</target>
</instr>
	</include>
	<include name="egxmlliteral" type="xml">
<instr>
<type>httpPost</type>
<url>http://localhost:8081/test-http-client/server/echo.idoc</url>
<arg>
	<myMessage>
		<element>value</element>
	</myMessage>
</arg>
<target>this:response</target>
</instr>
	</include>
	</includes>
</section>
<section name="copyright" styleuri="/xusr/share/doc/styles_1060/style_footer.xsl"/>	

</document>