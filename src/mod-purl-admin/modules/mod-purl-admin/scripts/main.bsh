import org.ten60.netkernel.layer1.representation.*;
import org.ten60.netkernel.xml.representation.*;
import com.ten60.netkernel.urii.aspect.*;
import org.purl.accessor.*;
import org.purl.accessor.util.*;
import java.net.URLEncoder;

main() {
    base=context.getThisRequest().getArgument("base");
    base = base.substring(6);
    //base = URLEncoder.encode(base, "UTF-8");
    req = null;
    resp = null;

    // If we didn't get a root HTTP context, see if we have a PURL
    // that matches, otherwise redirect to the main documentation
    // page.
	
    if(!base.equals("/")) {
        try {
            // PURLs take precedence over local references. If you need to
            // serve up static content from a PURL installation, reserve
            // the top level domains in the ffcpl:/etc/PURLConfig.xml file.
            // TODO: Do we really want to do this?  There was a partial implementation

            method = context.getThisRequest().getArgument("method");

            ru = context.getThisRequest().getArgument("requestURL");
            ru = ru.substring(ru.indexOf("://")+3);;

            fullpath = ru.substring(ru.indexOf("/"));
            req=context.createSubRequest("active:purl-resolver");
            req.addArgument("mode", "mode:resolve");
            req.addArgument("path", "ffcpl:" + fullpath);
            req.addArgument("method", method);
            req.addArgument("requestURL", context.getThisRequest().getArgument("requestURL"));
            resp=context.issueSubRequest(req);

        } catch (Exception ex) {
            resp = context.createResponseFrom(NKHelper.setResponseCode(context, 
                                    context.source("ffcpl:/pub/400-invalid.html"), 400));
            resp.setMimeType("text/html");
        }
    } else {
        //Issue HTTP Redirect
        req=context.createSubRequest("active:HTTPRedirect");
        req.addArgument("operator", new StringAspect("<url>/docs/index.html</url>"));
        result=context.issueSubRequest(req);
        resp=context.createResponseFrom(result);
        resp.setMimeType("text/xml");
    }

    context.setResponse(resp);
}