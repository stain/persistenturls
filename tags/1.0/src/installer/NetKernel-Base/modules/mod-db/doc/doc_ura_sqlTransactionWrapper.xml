<?xml version="1.0" encoding="UTF-8"?>

<document>
<title>sqlQuery Accessor</title>
<!--***************Cascading Style Sheets***************-->
<csslist>
	<css>/xlib/styles/css_ten60_lnf.css</css>
	<css>/xlib/styles/xmlverbatim.css</css>
</csslist>
<!--***************Links***************-->
<links>
</links>
<!--***************Table of Contents***************-->
<toc>
	<section name="definition"/>
	<section name="purpose"/>
</toc>

<section name="definition" styleuri="/xusr/share/doc/styles_1060/style_definition.xsl">
	<content>
		<module>urn:org:ten60:netkernel:mod:db</module>
		<format>
		<sub name="format"/>
		</format>
		<syntax>
			<type><b>sqlTransactionWrapper</b></type>
			<service req="true">the URI of a service to wrap</service>
			<rdbmsConfig>optional configuration document</rdbmsConfig>
			<myArg>Any number of optional arbitrarily named arguments which will be passed to the sub-requested service</myArg>
			<target req="true">the result of executing the subservice</target>
		</syntax>
		</content>
	<includes>

<include name="format" type="xml">
<instr>
	<type>sqlTransactionWrapper</type>
	<service>myService.bsh</service>
	<rdbmsConfig>ffcpl:/myconfiguration/configRDBMS.xml</rdbmsConfig>
	<myArg1>...</myArg1>
	<myArgN>...</myArgN>
	<target>var:result</target>
</instr>
</include>
</includes>
</section>

<section name="purpose" styleuri="/xusr/share/doc/styles_1060/style_basic.xsl">
	<content>
		<p>The <code>sqlTransactionWrapper</code> wraps an existing service in a transaction.
		It does this by aquiring a database connection and starting a transaction on it.
		It then invokes the service URI (specified by <i>service</i> and passes the database connection as a parameter.
		If the sub-request for the service succeeds then the transaction is commited. If an unhandled exception
		occurs in the sub-requested service then the transaction rollsback.
		</p>
		<p>If an rdbms configuration as described <link name="doc_books_cst_rdbms_introduction">here</link> is passed then this
		is used to find the connection. If none is supplied the default configuration found at
		<code>ffcpl:/etc/rdbmsConfig.xml</code> is used.
		</p>
		<p>A single transacted connection is then passed to the wrapped service by value as an
		argument named <code>rdbmsConfig</code>. The wrapped service should then use this supplied
		connection in all database requests for example:
		<sub name="code1"/>
		</p>
		<p>The sqlTransactionWrapper implements the '<link name="doc_mod_patterns_internal">mapper</link>' pattern. 
		All attached arguments in the request to wrapper are passed through to underlying
		service except <code>service</code>. For example in this DPML script:
<pre>
active:sqlTransactionWrapper+service@active:beanshell+operator@ffcpl:/myScript.bsh
</pre>
<p>
would create a sub-request:
</p>
<pre>
active:beanshell+operator@ffcpl:/myScript.bsh+rdbmsConfig@[a transient pass-by value URI]
</pre>
		</p>
	</content>
	<includes>
		<include name="code1" type="xml">
<idoc>
	<instr>
		<type>sqlQuery</type>
		<configuration>this:param:rdbmsConfig</configuration>
		<operand><sql>SELECT * FROM table;</sql></operand>
		<target>this:response</target>
	</instr>
</idoc>		
		</include>
	</includes>
</section>

</document>